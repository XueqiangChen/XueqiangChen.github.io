<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>中序遍历 on AhaMoment</title>
    <link>https://ahamoment.cn/tags/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/</link>
    <description>Recent content in 中序遍历 on AhaMoment</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2021
</copyright>
    <lastBuildDate>Thu, 15 Apr 2021 10:03:48 +0800</lastBuildDate><atom:link href="https://ahamoment.cn/tags/%E4%B8%AD%E5%BA%8F%E9%81%8D%E5%8E%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二叉树的中序遍历</title>
      <link>https://ahamoment.cn/posts/algorithm/algorithm-tree-inorder/</link>
      <pubDate>Thu, 15 Apr 2021 10:03:48 +0800</pubDate>
      
      <guid>https://ahamoment.cn/posts/algorithm/algorithm-tree-inorder/</guid>
      <description>二叉树的遍历方法分为先序遍历，中序遍历，后序遍历以及层序遍历这四种，其中先序，中序以及后序又可以用递归和非递归的方式来实现，层序遍历一般则是用一个队列来实现。关于这几种遍历方式和代码可以参考本博客的之前的一篇文章&amp;mdash;&amp;gt;传送门
这里我们通过一道 leetcode 题目来对二叉树的中序遍历法展开讨论。这道题的描述如下：
leetcode 94 [https://leetcode-cn.com/problems/binary-tree-inorder-traversal/] 给定一个二叉树的根节点 root ，返回它的 中序 遍历。 示例1： 1 \ 2 / 3 输入：root = [1,null,2,3] 输出：[1,3,2]  1.</description>
    </item>
    
  </channel>
</rss>
