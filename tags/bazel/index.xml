<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bazel on AhaMoment</title><link>https://ahamoment.cn/tags/bazel/</link><description>Recent content in bazel on AhaMoment</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021</copyright><lastBuildDate>Wed, 10 Feb 2021 14:05:07 +0800</lastBuildDate><atom:link href="https://ahamoment.cn/tags/bazel/index.xml" rel="self" type="application/rss+xml"/><item><title>bazel 外部存储库缓存</title><link>https://ahamoment.cn/posts/tool/tool-bazel/</link><pubDate>Wed, 10 Feb 2021 14:05:07 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-bazel/</guid><description>bazel 简介 安装 centos7：https://docs.bazel.build/versions/4.0.0/install-redhat.html
Step1：
从 Fedora COPR 下载 .repo 文件并复制到 /etc/yum.repos.d/ 目录。
Step2:
运行 yum install bazel3 命令安装。
教程 java / c++
常用命令 命令文档：https://docs.bazel.build/versions/master/command-line-reference.html#fetch-options
查询依赖关系：
bazel query --notool_deps --noimplicit_deps &amp;quot;deps(//:ProjectRunner)&amp;quot; --output graph 可视化网站：
http://www.webgraphviz.com/
编译命令：
bazel build //:ProjectRunner 清除命令：
bazel clean bazel clean在 outputPath和action_cache目录上执行rm -rf。它还会删除工作空间符号链接。 --expunge选项将清除整个outputBase。
输出目录 https://docs.bazel.build/versions/master/output_directories.html
必须从包含WORKSPACE文件的目录（“工作区目录”）或其子目录中调用Bazel。如果不是，它将报告错误。 outputRoot目录在Linux上默认为〜/.cache/bazel，在macOS上默认为/ private/var/tmp，在Windows上默认为％HOME％（如果设置），否则默认为％USERPROFILE％，否则调用SHGetKnownFolderPath()的结果设置了FOLDERID_Profile标志。如果设置了环境变量$ TEST_TMPDIR（如测试bazel本身），则该值将覆盖默认值。 我们将Bazel用户的构建状态保留在outputRoot/_bazel_$USER下。这称为 outputUserRoot 目录。 在outputUserRoot目录下，我们创建一个installBase目录，其名称为 install加上Bazel安装清单的MD5哈希。 在outputUserRoot目录下，我们还创建了一个outputBase目录，该目录的名称是工作区目录的路径名的MD5哈希。因此，例如，如果Bazel在工作空间目录/ home/user/src/my-project中（或在与该目录符号链接的目录中）运行，则我们将创建一个输出基本目录，名为：/home/user/.cache/bazel/ _bazel_user/7ffd56a6e4cb724ea575aba15733d113。 用户可以使用Bazel的--output_base启动选项来覆盖默认的输出基本目录。例如，bazel --output_base = /tmp/bazel/output build x/y:z。 用户还可以使用Bazel的--output_user_root启动选项来覆盖默认的安装基础目录和输出基础目录。例如：bazel --output_user_root=/tmp/bazel build x/y:z。 我们在工作区目录中放置了符号链接“bazel-”, “bazel-out”, “bazel-testlogs”, and “bazel-bin” 。这些符号链接指向输出目录内特定于目标的目录内的某些目录。这些符号链接只是为了方便用户，因为Bazel本身并不使用它们。另外，我们仅在工作空间目录可写时才这样做。</description></item></channel></rss>