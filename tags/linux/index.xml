<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on AhaMoment</title><link>https://ahamoment.cn/tags/linux/</link><description>Recent content in linux on AhaMoment</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021</copyright><lastBuildDate>Fri, 13 Aug 2021 03:54:23 +0000</lastBuildDate><atom:link href="https://ahamoment.cn/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 常用命令</title><link>https://ahamoment.cn/posts/linux/linux-commands/</link><pubDate>Fri, 13 Aug 2021 03:54:23 +0000</pubDate><guid>https://ahamoment.cn/posts/linux/linux-commands/</guid><description>设置 JAVA_HOME
export JAVA_HOME=&amp;quot;$(dirname $(dirname $(realpath $(which javac))))&amp;quot; tee Linux tee命令用于读取标准输入的数据，并将其内容输出成文件。
语法 tee [OPTION]... [FILE]... 说明 -a, --append 添加内容到指定文件，不会覆盖源文件内容 -i, --ignore-interrupts 忽略输入 awk 用法示例
命令 说明 awk '{print}' c.txt 打印整个文件的内容 awk '{print $1}' c.txt 打印文本的第一列的内容 awk '{print $1, $2, $3}' c.txt 打印文本的第一列到第三列的内容 awk '{print $1 &amp;quot;\t&amp;quot; $2 &amp;quot;\t&amp;quot; $3}' c.txt 打印文本的第一列到第三列的内容，并按照制表符间隔 awk '{print NR &amp;quot;\t&amp;quot; $1 &amp;quot;\t&amp;quot; $2 &amp;quot;\t&amp;quot; $3}' c.</description></item><item><title>认识 Linux NSCD 服务缓存</title><link>https://ahamoment.cn/posts/linux/linux-nscd/</link><pubDate>Sun, 27 Sep 2020 13:23:05 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-nscd/</guid><description>NSCD(Name Service Cache Daemon)是服务缓存守护进程。
NSCD 安装 RHEL/CentOS
yum -y install nscd Debian/Ubuntu
apt-get install nscd RPM
https://centos.pkgs.org/7/centos-x86_64/nscd-2.17-307.el7.1.x86_64.rpm.html CentOS7 之后 NSCD 使用 systemd 进行管理。
NSCD 命令选项 $ nscd --help 用法： nscd [选项...] Name Service Cache Daemon. -d, --debug Do not fork and display messages on the current tty -f, --config-file=名称 从NAME中读取配置数据 -g, --statistics Print current configuration statistics -i, --invalidate=TABLE Invalidate the specified cache -K, --shutdown 关闭服务器 -t, --nthreads=NUMBER 启动 NUMBER 个线程 -?</description></item><item><title>解决setcap导致Java加载libjli.so 失败问题</title><link>https://ahamoment.cn/posts/linux/linux-cap/</link><pubDate>Fri, 11 Sep 2020 11:12:43 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-cap/</guid><description>背景 最近碰到一个问题，有个应用在启动的时候一直报错，错误信息如下：
java: error while loading shared libraries: libjli.so: cannot open shared object file: No such file or directory 错误信息是说 java 应用加载不到 libjli.so 文件，我们使用 java -version 命令，同样的错误又出现了。使用 ldd 命令查看一下 java 应用是否加载了这个 so 文件，发现 java 应用加载的 so 文件中存在 libjli.so。
$ ldd java linux-vdso.so.1 =&amp;gt; (0x00007ffe2a9c7000) /usr/local/lib/libsysconfcpus.so (0x00002ac503ca8000) libz.so.1 =&amp;gt; /lib64/libz.so.1 (0x00002ac503eaa000) libjli.so =&amp;gt; /apps/svr/jdk-14.0.1/bin/./../lib/libjli.so (0x00002ac5040c0000) libpthread.so.0 =&amp;gt; /lib64/libpthread.so.0 (0x00002ac5042d1000) libdl.so.2 =&amp;gt; /lib64/libdl.so.2 (0x00002ac5044ee000) libc.so.6 =&amp;gt; /lib64/libc.so.6 (0x00002ac5046f2000) /lib64/ld-linux-x86-64.so.2 (0x00002ac503883000) 我们接着查看了 LD_LIBRARY_PATH 和 /etc/ld.</description></item></channel></rss>