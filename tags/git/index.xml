<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on AhaMoment</title><link>https://ahamoment.cn/tags/git/</link><description>Recent content in git on AhaMoment</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021</copyright><lastBuildDate>Tue, 24 Nov 2020 14:31:32 +0800</lastBuildDate><atom:link href="https://ahamoment.cn/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git 常用命令汇总</title><link>https://ahamoment.cn/posts/tool/tool-git-common-operations/</link><pubDate>Tue, 24 Nov 2020 14:31:32 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-git-common-operations/</guid><description>1. 撤销提交 撤销提交属于误操作的范畴，Git 误操作的类型主要有以下两个方面：
commit - 分支提交错误 reset - 误删代码 1.1 分支提交错误 有时我们会遇到这种情况：我们从develop 分支新建一个名为feat/home 分支去做A功能，然后由于一些其他原因A 功能需要延后，然后我们再从develop分支新建一个分支去做B功能或者C功能，在多分支多功能开发时，就容易出现做B功能时，忘记切换分支，一直等做完了提交了push之后才发现 push 错了远端的分支，并且 push 的改动与该分支需要开发的功能并没有交集，因此我们需要将已经提交错的分支内容回滚并提交push 到正确的远端分支。
此时有两种情况:
场景一：已经commit，但是未push到远端 使用git reset命令，可以在提交层面在私有分支舍弃一些没有提交的修改：
# 回退到上一个版本 git reset --hard HEAD^ git reset 命令主要有三个选项： &amp;ndash;soft、&amp;ndash;mixed 、&amp;ndash;hard，默认参数为 &amp;ndash;mixed。
git reset &amp;ndash;soft 提交：
--soft 这个版本的命令有“最小”影响，只改变一个符号引用的状态使其指向一个新提交，不会改变其索引和工作目录， 具体体现如下：
# 模拟一份提交历史 git add 1.js &amp;amp;&amp;amp; git commit -m &amp;quot;update part 1&amp;quot; git add 2.js &amp;amp;&amp;amp; git commit -m &amp;quot;update part 2&amp;quot; git add 3.</description></item><item><title>自动配置Git仓库提交作者</title><link>https://ahamoment.cn/posts/tool/tool-git-set-config/</link><pubDate>Sat, 16 Nov 2019 19:12:17 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-git-set-config/</guid><description>1. 背景 公司使用的代码仓库是Gitlab，个人代码仓库又是Github。每次提交代码的时候，需要切换不同的提交作者和提交邮箱，非常容易出错。 这个脚本是根据repo url自动设置提交作者，避免每次手动配置。
2. 方法 2.1 安装Git Linux 上安装Git直接使用 sudo yum install git 或者 sudo apt-get install git 命令即可。 Windows 上安装到官网下载安装软件安装即可。安装地址 2.2 添加脚本 在/root/下添加.git-templates/hooks 目录，添加脚本post-checkout，脚本内容如下：
#!/bin/bash #checkout hook to locally set user name and email based on user defined patterns #The patterns are matched against the clone url. # #Based on http://www.dvratil.cz/2015/12/git-trick-628-automatically-set-commit-author-based-on-repo-url/ function warn { echo -e &amp;quot;\n$1 Email and author not initialized in local config!&amp;quot; } email=&amp;quot;$(git config --local user.</description></item></channel></rss>