<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AhaMoment</title><link>https://ahamoment.cn/</link><description>Recent content on AhaMoment</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021</copyright><lastBuildDate>Mon, 01 Aug 2022 12:00:00 +0000</lastBuildDate><atom:link href="https://ahamoment.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>1. 数据结构和算法总览</title><link>https://ahamoment.cn/docs/algorithm/chapter1/1./</link><pubDate>Mon, 01 Aug 2022 12:00:00 +0000</pubDate><guid>https://ahamoment.cn/docs/algorithm/chapter1/1./</guid><description>本章主要介绍数据结构与算法的脑图和五步刷题法。</description></item><item><title>HIVE概述和HIVE基本原理</title><link>https://ahamoment.cn/docs/bigdata-doc/3.-hive/hive-hive/</link><pubDate>Fri, 22 Jul 2022 23:00:00 +0000</pubDate><guid>https://ahamoment.cn/docs/bigdata-doc/3.-hive/hive-hive/</guid><description>Hive是基于Hadoop的一个数据仓库工具，它可以将结构化的数据文件（TEXT,ORC,PARQUET等）映射为一张数据库表，并提供简单的</description></item><item><title>流式处理和实时计算：Kafka</title><link>https://ahamoment.cn/posts/bigdata/kafka/</link><pubDate>Mon, 11 Oct 2021 02:35:35 +0000</pubDate><guid>https://ahamoment.cn/posts/bigdata/kafka/</guid><description>&lt;p>kafka不仅仅是消息系统，更可以用在流式处理的场景中。本文主要介绍消息系统概述，kafka系统架构和原理。&lt;/p></description></item><item><title>大数据 OLAP 引擎：Presto 概述</title><link>https://ahamoment.cn/posts/bigdata/olap-presto/</link><pubDate>Sat, 09 Oct 2021 02:35:35 +0000</pubDate><guid>https://ahamoment.cn/posts/bigdata/olap-presto/</guid><description>大数据 OLAP 引擎：Presto 概述 SQL on Anything presto特点 presto架构 Presto查询引擎是一个Master-Slave的架构，由一个Coor</description></item><item><title>OLAP概述</title><link>https://ahamoment.cn/posts/bigdata/olap/</link><pubDate>Wed, 15 Sep 2021 02:35:35 +0000</pubDate><guid>https://ahamoment.cn/posts/bigdata/olap/</guid><description>OLAP OLAP vs OLTP 的差异 OLAP定义：联机分析处理，数据访问和分析，多维数据，交互性，深入观察，决策。 OLAP 的目标：查询和报表 相关概念： 维度 维的层次 维的成</description></item><item><title>Spring Boot 发送邮件</title><link>https://ahamoment.cn/posts/java/springboot-send-email/</link><pubDate>Wed, 08 Sep 2021 14:47:54 +0800</pubDate><guid>https://ahamoment.cn/posts/java/springboot-send-email/</guid><description>&lt;p>简单邮件传输协议 (SMTP) 是一种以电子方式传输邮件的标准通信协议。 SMTP 使从应用程序内部发送邮件消息成为可能。
在本教程中，我们将使用 SMTP 和 Spring Boot 从我们的应用程序发送邮件消息。&lt;/p></description></item><item><title>Linux 常用命令</title><link>https://ahamoment.cn/posts/linux/linux-commands/</link><pubDate>Fri, 13 Aug 2021 03:54:23 +0000</pubDate><guid>https://ahamoment.cn/posts/linux/linux-commands/</guid><description>设置 JAVA_HOME export JAVA_HOME=&amp;quot;$(dirname $(dirname $(realpath $(which javac))))&amp;quot; ls 命令详解 ls [选项] [文件名] 选项 -l [root@dev workspace]# ls -l total 16 drwxr-xr-x 2 root root 4096 Jun 26 18:19 download drwxr-xr-x 3 root root 4096 Jun 26 11:50 git_storage drwxr-xr-x 2 root root 4096 Jun 25 07:13 sh drwxr-xr-x 3 root root 4096 Jun 26 14:56 svr 第</description></item><item><title>Hugo 博客搭建</title><link>https://ahamoment.cn/posts/tool/tool-hugo-blog/</link><pubDate>Thu, 17 Jun 2021 20:28:05 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-hugo-blog/</guid><description>前言 原先的博客主题 even 用了一段时间，由于想把博客内的一些系列文章整理成一个独立的笔记链接，索性就一起更换了博客的主题，现在使用的这款主题是eu</description></item><item><title>十字路口上的Kubernetes默认调度器</title><link>https://ahamoment.cn/docs/k8s-doc/chapter6/default-scheduler/</link><pubDate>Wed, 21 Apr 2021 19:33:49 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter6/default-scheduler/</guid><description>&lt;blockquote>
&lt;p>本文来自张磊老师的&lt;a href="https://time.geekbang.org/column/article/69678">《深入剖析Kuberntes》&lt;/a>课程笔记，请勿转载。&lt;/p>
&lt;/blockquote></description></item><item><title>QoS 源代码分析</title><link>https://ahamoment.cn/docs/k8s-doc/chapter6/qos-sc/</link><pubDate>Tue, 20 Apr 2021 20:02:37 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter6/qos-sc/</guid><description>&lt;p>QOS 的作用请参考上面的几篇文章&lt;a href="https://chenxq.xyz/post/cloud-k8s-resource-model-and-resource-manager/">Kubernetes的资源模型和资源管理&lt;/a>&lt;/p></description></item><item><title>二叉树的中序遍历</title><link>https://ahamoment.cn/posts/algorithm/algorithm-tree-inorder/</link><pubDate>Thu, 15 Apr 2021 10:03:48 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-tree-inorder/</guid><description>二叉树的遍历方法分为先序遍历，中序遍历，后序遍历以及层序遍历这四种，其中先序，中序以及后序又可以用递归和非递归的方式来实现，层序遍历一般则是</description></item><item><title>Kubernetes的资源模型和资源管理</title><link>https://ahamoment.cn/docs/k8s-doc/chapter6/resource-model/</link><pubDate>Wed, 14 Apr 2021 20:13:24 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter6/resource-model/</guid><description>&lt;blockquote>
&lt;p>本文来自张磊老师的&lt;a href="https://time.geekbang.org/column/article/69678">《深入剖析Kuberntes》&lt;/a>课程笔记，请勿转载。&lt;/p>
&lt;/blockquote></description></item><item><title>K8s Go 客户端浅析</title><link>https://ahamoment.cn/docs/k8s-doc/chapter6/client-go/</link><pubDate>Tue, 06 Apr 2021 19:58:51 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter6/client-go/</guid><description>在使用 Kubernetes REST API 编写应用程序时， 您并不需要自己实现 API 调用和 “请求/响应” 类型。 您可以根据自己的编程语言需要选择使用合适的客户端库。 客户端库通常为</description></item><item><title>Go 语言中的 new 关键字和 make 关键字的区别</title><link>https://ahamoment.cn/posts/go/go-new-vs-make/</link><pubDate>Thu, 01 Apr 2021 16:23:40 +0800</pubDate><guid>https://ahamoment.cn/posts/go/go-new-vs-make/</guid><description>Go 语言分配内存的函数包括 new 和 make。new 用来获取类型对应的指针类型，即要获取指针类型的内存分配。make 只用来分配引用类型，即为chan</description></item><item><title>Mac 命令汇总</title><link>https://ahamoment.cn/posts/tool/tool-mac-os-commands/</link><pubDate>Thu, 25 Mar 2021 16:03:00 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-mac-os-commands/</guid><description>常用快捷键 Overall Mac 键盘快捷键 修饰键 Command（或 Cmd）⌘ Shift ⇧ Option（或 Alt）⌥ Control（或 Ctrl）⌃ Caps Lock ⇪ Fn 在 Windows PC 专用键盘</description></item><item><title>安装 Tensorflow2</title><link>https://ahamoment.cn/posts/machinelearning/ml-tensorflow2.0-install/</link><pubDate>Thu, 25 Mar 2021 15:48:23 +0800</pubDate><guid>https://ahamoment.cn/posts/machinelearning/ml-tensorflow2.0-install/</guid><description>安装 Anaconda https://www.anaconda.com/products/individual 根据系统选择下载不同的 anaconda 安装： 这里安装的是 MacOS 的软件包，安装完成后使用 conda 命令查看是否安装成功： $ conda --version conda 4.9.2 更换 conda 镜像源 查看用户目录下的 .condarc</description></item><item><title>Vim 折腾记</title><link>https://ahamoment.cn/posts/tool/tool-vim/</link><pubDate>Tue, 16 Mar 2021 16:12:24 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-vim/</guid><description>&lt;p>折腾了两天的vim，想要把它变成我的机器上默认的IDE，方便在没有环境的时候，快速查阅代码，做一些基本的开发任务，折腾过程记录在这篇博客上&lt;/p></description></item><item><title>Go 语言工作目录</title><link>https://ahamoment.cn/posts/go/go-project-catalogs/</link><pubDate>Mon, 15 Mar 2021 10:16:45 +0800</pubDate><guid>https://ahamoment.cn/posts/go/go-project-catalogs/</guid><description>GOPATH 是 Go语言中使用的一个环境变量，它使用绝对路径提供项目的工作目录。 工作目录是一个工程开发的相对参考目录，好比当你要在公司编写一套服务器代码</description></item><item><title>[译]Kubernetes深入研究：CustomResources的代码生成</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/code-generation-for-customresources/</link><pubDate>Fri, 12 Mar 2021 10:57:25 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/code-generation-for-customresources/</guid><description>&lt;blockquote>
&lt;p>原文链接：&lt;a href="https://www.openshift.com/blog/kubernetes-deep-dive-code-generation-customresources">Kubernetes Deep Dive: Code Generation for CustomResources&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>[译]Kubernetes深入研究：CustomResources的代码生成</title><link>https://ahamoment.cn/docs/k8s-doc/chapter9/code-generation-for-customresources/</link><pubDate>Fri, 12 Mar 2021 10:57:25 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter9/code-generation-for-customresources/</guid><description>&lt;blockquote>
&lt;p>原文链接：&lt;a href="https://www.openshift.com/blog/kubernetes-deep-dive-code-generation-customresources">Kubernetes Deep Dive: Code Generation for CustomResources&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>深入解析声明式API（一）：API对象的奥秘</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/api-object/</link><pubDate>Fri, 12 Mar 2021 10:18:35 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/api-object/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程，本节主要是关于自定义API资源(CRD)。&lt;/p>
&lt;/blockquote></description></item><item><title>声明式API与Kubernetes编程范式</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/declarative-api/</link><pubDate>Fri, 12 Mar 2021 07:19:24 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/declarative-api/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程，本节主要是关于声明式 API 与 Kubernetes 编程范式。&lt;/p>
&lt;/blockquote></description></item><item><title>撬动离线业务：Job与CronJob</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/job/</link><pubDate>Tue, 09 Mar 2021 14:45:46 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/job/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析Kubernetes》课程.&lt;/p>
&lt;/blockquote></description></item><item><title>深入理解StatefulSet（二）：存储状态</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/statefulset-2/</link><pubDate>Tue, 09 Mar 2021 11:20:45 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/statefulset-2/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程，本节内容主要介绍 StatefulSet 的存储状态&lt;/p>
&lt;/blockquote></description></item><item><title>容器化守护进程的意义：DaemonSet</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/daemonset/</link><pubDate>Tue, 09 Mar 2021 10:42:07 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/daemonset/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程，本节内容主要介绍 Daemonset&lt;/p>
&lt;/blockquote></description></item><item><title>深入理解StatefulSet（一）：拓扑状态</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/statefulset-1/</link><pubDate>Wed, 03 Mar 2021 07:45:28 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/statefulset-1/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程，本节内容主要介绍 StatefulSet 的拓扑状态&lt;/p>
&lt;/blockquote></description></item><item><title>Deployment：作业副本与水平扩容</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/deployment/</link><pubDate>Mon, 01 Mar 2021 07:37:59 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/deployment/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程&lt;/p>
&lt;ol>
&lt;li>作业副本&lt;/li>
&lt;li>水平扩容&lt;/li>
&lt;/ol>
&lt;/blockquote></description></item><item><title>谈谈“控制器”模式</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/controller-mode/</link><pubDate>Sun, 28 Feb 2021 15:15:52 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/controller-mode/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程&lt;/p>
&lt;/blockquote></description></item><item><title>容器健康检查</title><link>https://ahamoment.cn/docs/k8s-doc/chapter9/health-check/</link><pubDate>Sat, 27 Feb 2021 17:40:49 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter9/health-check/</guid><description/></item><item><title>深入解析Pod对象(二): 使用进阶</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/pod-concept2/</link><pubDate>Sat, 27 Feb 2021 15:55:20 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/pod-concept2/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析 Kubernetes》课程&lt;/p>
&lt;ol>
&lt;li>ProjectedVolume: Secret, ConfigMap, DownwadAPI&lt;/li>
&lt;li>ServiceAccount&lt;/li>
&lt;li>容器健康检查和恢复机制&lt;/li>
&lt;li>Pod 预设置：PodPreset&lt;/li>
&lt;/ol>
&lt;/blockquote></description></item><item><title>深入解析Pod对象(一)：基本概念</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/pod-concept1/</link><pubDate>Fri, 26 Feb 2021 15:14:52 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/pod-concept1/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析Kubernetes》课程，第14课时：深入解析Pod对象(一)：基本概念&lt;/p>
&lt;/blockquote></description></item><item><title>为什么我们需要Pod</title><link>https://ahamoment.cn/docs/k8s-doc/chapter3/why-pod/</link><pubDate>Fri, 26 Feb 2021 09:33:05 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter3/why-pod/</guid><description>&lt;blockquote>
&lt;p>本文转自张磊老师的《深入剖析Kubernetes》课程，第13课时：为什么我们需要 Pod?&lt;/p>
&lt;/blockquote></description></item><item><title>常用的k8s命令</title><link>https://ahamoment.cn/docs/k8s-doc/chapter9/commands/</link><pubDate>Thu, 25 Feb 2021 07:37:43 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter9/commands/</guid><description>1. yaml 文件 1.1 创建 $ kubectl create -f 我的配置文件 1.2 修改 更新 yaml 文件： $ kubectl replace -f nginx-deployment.yaml 声明式的表达方式，使用 apply 命令： $ kubectl apply -f nginx-deployment.yaml 2. Pod 2.1 查询 获取 pod 的信息 kubectl get pods -n ${namespace} **根</description></item><item><title>使用kubeadm 安装k8s集群</title><link>https://ahamoment.cn/docs/k8s-doc/chapter2/kubeadm/</link><pubDate>Sat, 20 Feb 2021 09:12:03 +0800</pubDate><guid>https://ahamoment.cn/docs/k8s-doc/chapter2/kubeadm/</guid><description>1. 准备工作 机器配置 8核CPU、8GB内存； 40GB磁盘 centos 7.9 内网互同 外网访问不受限制 组件信息 组件 版本 系统 Centos 7.9 Docker版本 18.09.9 k8s 版本 1.20.0 Pod 网段 10.32.0.0/</description></item><item><title>bazel 外部存储库缓存</title><link>https://ahamoment.cn/posts/tool/tool-bazel/</link><pubDate>Wed, 10 Feb 2021 14:05:07 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-bazel/</guid><description>bazel 简介 安装 centos7：https://docs.bazel.build/versions/4.0.0/install-redhat.ht</description></item><item><title>MyBatis Generator 使用与原理(上)</title><link>https://ahamoment.cn/posts/java/framework-mybatis-generator/</link><pubDate>Tue, 26 Jan 2021 20:06:07 +0800</pubDate><guid>https://ahamoment.cn/posts/java/framework-mybatis-generator/</guid><description/></item><item><title>Docker 和 Kubernetes 面试题</title><link>https://ahamoment.cn/posts/interview/interview-docker-k8s/</link><pubDate>Mon, 28 Dec 2020 11:16:35 +0800</pubDate><guid>https://ahamoment.cn/posts/interview/interview-docker-k8s/</guid><description>1. Docker 问题 1.1. docker 后端存储驱动 devicemapper、overlay 几种的区别？ 刚开始拿到这道题我有点蒙，因为我只知道目前我们用的是vg-poo</description></item><item><title>面试题目录</title><link>https://ahamoment.cn/posts/interview/interview-questions/</link><pubDate>Tue, 22 Dec 2020 14:00:47 +0800</pubDate><guid>https://ahamoment.cn/posts/interview/interview-questions/</guid><description>&lt;blockquote>
&lt;p>面试题目录&lt;/p>
&lt;/blockquote></description></item><item><title>分布式面试题</title><link>https://ahamoment.cn/posts/interview/interview-distributed-system/</link><pubDate>Fri, 18 Dec 2020 09:12:07 +0800</pubDate><guid>https://ahamoment.cn/posts/interview/interview-distributed-system/</guid><description>&lt;blockquote>
&lt;p>本文收集有关分布式面试题的内容&lt;/p>
&lt;/blockquote></description></item><item><title>Spring系列面试题</title><link>https://ahamoment.cn/posts/interview/interview-spring/</link><pubDate>Thu, 17 Dec 2020 14:21:46 +0800</pubDate><guid>https://ahamoment.cn/posts/interview/interview-spring/</guid><description>&lt;blockquote>
&lt;p>本文包含spring, spring boot, spring mvc 以及 mybatis的面试题&lt;/p>
&lt;/blockquote></description></item><item><title>Java 基础面试题</title><link>https://ahamoment.cn/posts/interview/interview-java/</link><pubDate>Wed, 16 Dec 2020 09:44:34 +0800</pubDate><guid>https://ahamoment.cn/posts/interview/interview-java/</guid><description>&lt;blockquote>
&lt;p>本文收集Java基础知识点相关的面试题目&lt;/p>
&lt;/blockquote></description></item><item><title>计算机网络面试题</title><link>https://ahamoment.cn/posts/interview/interview-network/</link><pubDate>Thu, 10 Dec 2020 09:43:05 +0800</pubDate><guid>https://ahamoment.cn/posts/interview/interview-network/</guid><description>&lt;blockquote>
&lt;p>本文主要收集面试过程中遇到的计算机网络的面试题。&lt;/p>
&lt;/blockquote></description></item><item><title>MySQL 面试题</title><link>https://ahamoment.cn/posts/interview/interview-mysql/</link><pubDate>Wed, 09 Dec 2020 11:48:24 +0800</pubDate><guid>https://ahamoment.cn/posts/interview/interview-mysql/</guid><description>1. 什么是MySQL？ MySQL 是一种关系型数据库，在Java企业级开发中非常常用，因为 MySQL 是开源免费的，并且方便扩展。阿里巴巴数据库系统也大量用到了 M</description></item><item><title>Git 常用命令汇总</title><link>https://ahamoment.cn/posts/tool/tool-git-common-operations/</link><pubDate>Tue, 24 Nov 2020 14:31:32 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-git-common-operations/</guid><description>1. 撤销提交 撤销提交属于误操作的范畴，Git 误操作的类型主要有以下两个方面： commit - 分支提交错误 reset - 误删代码 1.1 分支提交错误 有时我们会遇到这种情况：</description></item><item><title>Java 多线程 - 自定义线程池</title><link>https://ahamoment.cn/posts/java/java-multithread-thread-pool/</link><pubDate>Thu, 12 Nov 2020 10:22:13 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-multithread-thread-pool/</guid><description>1. 为什么要用线程池？ 池化技术相比大家已经屡见不鲜了，线程池、数据库连接池、Http 连接池等等都是对这个思想的应用。池化技术的思想主要是为了减</description></item><item><title>Java 多线程 - 线程生命周期</title><link>https://ahamoment.cn/posts/java/java-multithread-thread-lifecycle/</link><pubDate>Wed, 11 Nov 2020 18:23:31 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-multithread-thread-lifecycle/</guid><description>线程的生命周期大体可以分为如下6个主要的阶段： NEW RUNNABLE WAITING TIMED_WAITING BLOCKED TERMINATED 从 JDK 的源代码中也能看到关于线程状态的描述： // Thread.State public enum State { /** * Thread state for a thread which has not yet started. */ NEW,</description></item><item><title>Java 多线程面试题总结</title><link>https://ahamoment.cn/posts/java/java-multithread-interview-questions/</link><pubDate>Wed, 11 Nov 2020 10:41:32 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-multithread-interview-questions/</guid><description/></item><item><title>Java 多线程 - 深入理解synchronized关键字</title><link>https://ahamoment.cn/posts/java/java-multithread-synchronized2/</link><pubDate>Sun, 25 Oct 2020 07:20:03 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-multithread-synchronized2/</guid><description>synchronized关键字提供了一种互斥机制，也就是说在同一时刻，只能有一个线程访问同步资源，很多资料、书籍将synchronized（</description></item><item><title>Java 多线程 - 线程中断 Interrupt</title><link>https://ahamoment.cn/posts/java/java-multithread-interrupt/</link><pubDate>Sat, 24 Oct 2020 07:17:54 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-multithread-interrupt/</guid><description>&lt;p>线程interrupt，是一个非常重要的API，也是经常使用的方法，在本文中我们将Thread深入源码对其进行详细的剖析。&lt;/p></description></item><item><title>JVM 内存结构</title><link>https://ahamoment.cn/posts/java/java-jvm-jmm/</link><pubDate>Thu, 15 Oct 2020 19:55:31 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-jvm-jmm/</guid><description>http://www.oracle.com/technetwork/java/javase/memorymanagement-whitepaper-150215.pdf JVM在执行Java程序的时候会把对应的物理内存划分成不同的内存区域，每一个区域都存放着不同的数据，也有不同的创建与销毁时机，有些分区会在</description></item><item><title>散列表那些事</title><link>https://ahamoment.cn/posts/algorithm/algorithm-hashtable/</link><pubDate>Thu, 15 Oct 2020 10:04:54 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-hashtable/</guid><description>基本概念 在登录QQ的时候，QQ服务器是如何核对你的身份？面对庞大的用户群，如何快速找到用户信息？ 我们已经知道的几种查找方法包括：顺序查找，二</description></item><item><title>认识 Linux NSCD 服务缓存</title><link>https://ahamoment.cn/posts/linux/linux-nscd/</link><pubDate>Sun, 27 Sep 2020 13:23:05 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-nscd/</guid><description>NSCD(Name Service Cache Daemon)是服务缓存守护进程。 NSCD 安装 RHEL/CentOS yum -y install nscd Debian/Ubuntu apt-get install nscd RPM https://centos.pkgs.org/7/centos-x86_64/nscd-2.17-307.el7.1.x86_64.rpm.html CentOS7 之后 NSCD 使用 systemd 进行管理。 NSCD 命令选项 $ nscd --help 用法： nscd [选项...] Name Service Cache Daemon. -d,</description></item><item><title>堆</title><link>https://ahamoment.cn/posts/algorithm/algorithm-heap/</link><pubDate>Tue, 15 Sep 2020 11:44:06 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-heap/</guid><description>什么是堆 了解什么是堆之前，我们知道队列的概念，队列的特点是先进先出，但是有一种特殊的队列，取出元素的顺序是按照元素的优先权（关键字）大小，而</description></item><item><title>容器内获取 CPU 核数问题</title><link>https://ahamoment.cn/posts/cloud/cloud-container-get-cpu/</link><pubDate>Fri, 11 Sep 2020 18:14:58 +0800</pubDate><guid>https://ahamoment.cn/posts/cloud/cloud-container-get-cpu/</guid><description>现在越来越多的公司将服务通过容器来部署，但这里其实对Java的应用有一个坑。很多超时敏感的应用其实对GC的要求还是比较高的，减少GC的时间变</description></item><item><title>解决setcap导致Java加载libjli.so 失败问题</title><link>https://ahamoment.cn/posts/linux/linux-cap/</link><pubDate>Fri, 11 Sep 2020 11:12:43 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-cap/</guid><description>背景 最近碰到一个问题，有个应用在启动的时候一直报错，错误信息如下： java: error while loading shared libraries: libjli.so: cannot open shared object file: No such file or directory 错误信息是说 java 应用加载不到 libjli.so 文件，我们使</description></item><item><title>平衡二叉树</title><link>https://ahamoment.cn/posts/algorithm/algorithm-balanced-binary-tree/</link><pubDate>Mon, 31 Aug 2020 18:11:54 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-balanced-binary-tree/</guid><description>平衡二叉树 平衡二叉树也是一种搜索树。 搜索树节点不同插入次序，将导致不同的深度和平均查找长度 ASL。 平衡因子（Balance Factor）:B</description></item><item><title>Linux Shell Script 基础教程</title><link>https://ahamoment.cn/posts/linux/linux-bash-tutorials/</link><pubDate>Thu, 27 Aug 2020 16:03:59 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-bash-tutorials/</guid><description>本文翻译自LEARN UNIX，博主在原文的基础上添加了一些内容。如果没有Linux 机器，推荐使用该网站 https://www.tutorialspoint.com/execute_ksh_online.php 作为shell在线demo的环境。 1.</description></item><item><title>二叉搜索树</title><link>https://ahamoment.cn/posts/algorithm/algorithm-binary-search-tree/</link><pubDate>Wed, 19 Aug 2020 17:05:29 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-binary-search-tree/</guid><description>1. 二叉搜索树的概念 二叉搜索树，也称为二叉排序树或二叉查找树。一棵不为空的二叉搜索树满足以下性质： 非空左子树的所有键值小于其根结点的键值。 非空</description></item><item><title>二叉树及存储结构</title><link>https://ahamoment.cn/posts/algorithm/algorithm-binary-tree/</link><pubDate>Tue, 11 Aug 2020 10:40:08 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-binary-tree/</guid><description>&lt;p>摘要：二叉树的定义，遍历二叉树&lt;/p></description></item><item><title>树的定义及表示</title><link>https://ahamoment.cn/posts/algorithm/algorithm-tree/</link><pubDate>Tue, 11 Aug 2020 10:31:07 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-tree/</guid><description>这一部分主要介绍一下数据结构中很重要的一个概念：树。那么什么是树呢？在说明这个概念之前，我们先来看看和它相关的一些内容。 1. 查找 查找是根据某个</description></item><item><title>队列及其实现</title><link>https://ahamoment.cn/posts/algorithm/algorithm-queue/</link><pubDate>Thu, 06 Aug 2020 20:04:38 +0800</pubDate><guid>https://ahamoment.cn/posts/algorithm/algorithm-queue/</guid><description>1. 什么是队列 具有一定操作约束的线性表。插入和删除操作，只能在一端插入，另一端删除。 数据插入称之为入队(addQ)，数据删除称之为出队(del</description></item><item><title>Java 多线程 - 死锁问题</title><link>https://ahamoment.cn/posts/java/java-multithread-dead-lock/</link><pubDate>Wed, 10 Jun 2020 19:21:07 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-multithread-dead-lock/</guid><description>锁是非常有用的工具，运用场景非常多，因为它使用起来非常方便，而且易于理解。但同时它也会带来一些困扰，那就是可能引起死锁。 1. 什么是死锁 百度百科</description></item><item><title>Java 多线程 - 初识 Synchronized</title><link>https://ahamoment.cn/posts/java/java-multithread-synchronized/</link><pubDate>Wed, 10 Jun 2020 19:16:24 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-multithread-synchronized/</guid><description>Synchronized 简介 本文出自汪文君老师的《Java 并发编程》课程，如需转载，请注明源出处！ 先来看一个例子，这个例子是模拟银行叫号的，使用三个线程模拟三个柜</description></item><item><title>20 常用的 RPM 命令</title><link>https://ahamoment.cn/posts/linux/linux-20-rpm-command/</link><pubDate>Tue, 02 Jun 2020 18:51:23 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-20-rpm-command/</guid><description>本文翻译自20 Practical Examples of RPM Commands in Linux RMP (Red Hat Package Manager) 是一款 Red Hat 系统的开源包管理工具，支持安装、更新、卸载、查询、验证和管理系统软件包。RPM以前称为 .rpm 文件</description></item><item><title>JDK1.8 源代码阅读环境搭建</title><link>https://ahamoment.cn/posts/java/java-source-code-learn/</link><pubDate>Mon, 11 May 2020 18:57:51 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-source-code-learn/</guid><description>一、准备 Itellj IDEA， jdk1.8 的源代码包(解压 jdk 目录下的 src.zip 包得到) 二、项目结构 IDEA 创建一个普通的 java 项目 把解压得到的 jdk1.8 的源代码复制到 source 目录下： test 目录用来</description></item><item><title>Linux Shell 输入/输出重定向</title><link>https://ahamoment.cn/posts/linux/linux-shell-input-output-redirect/</link><pubDate>Tue, 26 Nov 2019 19:54:15 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-shell-input-output-redirect/</guid><description>大多数 UNIX 系统命令从你的终端接受输入并将所产生的输出发送回到您的终端。一个命令通常从一个叫标准输入的地方读取输入，默认情况下，这恰好是你的终端</description></item><item><title>IntellJ IDEA 远程调试 Java 程序</title><link>https://ahamoment.cn/posts/java/java-remote-debug/</link><pubDate>Thu, 21 Nov 2019 20:04:16 +0800</pubDate><guid>https://ahamoment.cn/posts/java/java-remote-debug/</guid><description>1. 前言 当我们发现服务器上的应用发生某些故障，并且没有足够的日志来定位问题的时候，就会觉得非常头疼，尤其是在生产环境中想要对应用进行调试并非易</description></item><item><title>自动配置Git仓库提交作者</title><link>https://ahamoment.cn/posts/tool/tool-git-set-config/</link><pubDate>Sat, 16 Nov 2019 19:12:17 +0800</pubDate><guid>https://ahamoment.cn/posts/tool/tool-git-set-config/</guid><description>1. 背景 公司使用的代码仓库是Gitlab，个人代码仓库又是Github。每次提交代码的时候，需要切换不同的提交作者和提交邮箱，非常容易出错。 这</description></item></channel></rss>