<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on AhaMoment</title><link>https://ahamoment.cn/categories/linux/</link><description>Recent content in Linux on AhaMoment</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2021</copyright><lastBuildDate>Fri, 13 Aug 2021 03:54:23 +0000</lastBuildDate><atom:link href="https://ahamoment.cn/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 常用命令</title><link>https://ahamoment.cn/posts/linux/linux-commands/</link><pubDate>Fri, 13 Aug 2021 03:54:23 +0000</pubDate><guid>https://ahamoment.cn/posts/linux/linux-commands/</guid><description>设置 JAVA_HOME
export JAVA_HOME=&amp;quot;$(dirname $(dirname $(realpath $(which javac))))&amp;quot; tee Linux tee命令用于读取标准输入的数据，并将其内容输出成文件。
语法 tee [OPTION]... [FILE]... 说明 -a, --append 添加内容到指定文件，不会覆盖源文件内容 -i, --ignore-interrupts 忽略输入 awk 用法示例
命令 说明 awk '{print}' c.txt 打印整个文件的内容 awk '{print $1}' c.txt 打印文本的第一列的内容 awk '{print $1, $2, $3}' c.txt 打印文本的第一列到第三列的内容 awk '{print $1 &amp;quot;\t&amp;quot; $2 &amp;quot;\t&amp;quot; $3}' c.txt 打印文本的第一列到第三列的内容，并按照制表符间隔 awk '{print NR &amp;quot;\t&amp;quot; $1 &amp;quot;\t&amp;quot; $2 &amp;quot;\t&amp;quot; $3}' c.</description></item><item><title>认识 Linux NSCD 服务缓存</title><link>https://ahamoment.cn/posts/linux/linux-nscd/</link><pubDate>Sun, 27 Sep 2020 13:23:05 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-nscd/</guid><description>NSCD(Name Service Cache Daemon)是服务缓存守护进程。
NSCD 安装 RHEL/CentOS
yum -y install nscd Debian/Ubuntu
apt-get install nscd RPM
https://centos.pkgs.org/7/centos-x86_64/nscd-2.17-307.el7.1.x86_64.rpm.html CentOS7 之后 NSCD 使用 systemd 进行管理。
NSCD 命令选项 $ nscd --help 用法： nscd [选项...] Name Service Cache Daemon. -d, --debug Do not fork and display messages on the current tty -f, --config-file=名称 从NAME中读取配置数据 -g, --statistics Print current configuration statistics -i, --invalidate=TABLE Invalidate the specified cache -K, --shutdown 关闭服务器 -t, --nthreads=NUMBER 启动 NUMBER 个线程 -?</description></item><item><title>解决setcap导致Java加载libjli.so 失败问题</title><link>https://ahamoment.cn/posts/linux/linux-cap/</link><pubDate>Fri, 11 Sep 2020 11:12:43 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-cap/</guid><description>背景 最近碰到一个问题，有个应用在启动的时候一直报错，错误信息如下：
java: error while loading shared libraries: libjli.so: cannot open shared object file: No such file or directory 错误信息是说 java 应用加载不到 libjli.so 文件，我们使用 java -version 命令，同样的错误又出现了。使用 ldd 命令查看一下 java 应用是否加载了这个 so 文件，发现 java 应用加载的 so 文件中存在 libjli.so。
$ ldd java linux-vdso.so.1 =&amp;gt; (0x00007ffe2a9c7000) /usr/local/lib/libsysconfcpus.so (0x00002ac503ca8000) libz.so.1 =&amp;gt; /lib64/libz.so.1 (0x00002ac503eaa000) libjli.so =&amp;gt; /apps/svr/jdk-14.0.1/bin/./../lib/libjli.so (0x00002ac5040c0000) libpthread.so.0 =&amp;gt; /lib64/libpthread.so.0 (0x00002ac5042d1000) libdl.so.2 =&amp;gt; /lib64/libdl.so.2 (0x00002ac5044ee000) libc.so.6 =&amp;gt; /lib64/libc.so.6 (0x00002ac5046f2000) /lib64/ld-linux-x86-64.so.2 (0x00002ac503883000) 我们接着查看了 LD_LIBRARY_PATH 和 /etc/ld.</description></item><item><title>Linux Shell Script 基础教程</title><link>https://ahamoment.cn/posts/linux/linux-bash-tutorials/</link><pubDate>Thu, 27 Aug 2020 16:03:59 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-bash-tutorials/</guid><description>本文翻译自LEARN UNIX，博主在原文的基础上添加了一些内容。如果没有Linux 机器，推荐使用该网站 https://www.tutorialspoint.com/execute_ksh_online.php 作为shell在线demo的环境。
1. Shell 是什么 Shell为您提供了与Unix系统的接口。它收集您的输入，并根据该输入执行程序。程序完成执行后，将显示该程序的输出。 Shell 是可以运行我们的命令，程序，shell 脚本的环境。Shell 有不同的类型，每种Shell都有它自己的命令和功能。
1.1 Shell 类型 Linux 系统中，主要有两种类型的Shell：
Bourne shell - 如果使用Bourne类型的shell，默认的提示符就是$，可以通过修改环境变量PS1来更改你的提示符。 C shell - C 类型的shell，默认的提示符是%。 Bourne Shell 又有下面几种类型：
Bourne shell (sh) Korn shell (ksh) Bourne Again shell (bash) POSIX shell (sh) C 类型 的Shell包括以下两种：
C shell (csh) TENEX/TOPS C shell (tcsh) 在大多数 Linux 版本中，Bourne shell 通常都安装为/bin/sh。由于这个原因，它是不同版本的Linux 的首选 Shell。在本文中，我们将介绍大多数基于Bourne Shell的Shell概念。
1.2 Shell 脚本 Shell脚本的基本概念是命令列表，按执行顺序列出命令。 Shell 脚本文件以 .</description></item><item><title>20 常用的 RPM 命令</title><link>https://ahamoment.cn/posts/linux/linux-20-rpm-command/</link><pubDate>Tue, 02 Jun 2020 18:51:23 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-20-rpm-command/</guid><description>本文翻译自20 Practical Examples of RPM Commands in Linux
RMP (Red Hat Package Manager) 是一款 Red Hat 系统的开源包管理工具，支持安装、更新、卸载、查询、验证和管理系统软件包。RPM以前称为 .rpm 文件，文件内包含编译好的软件和包所需要的库。
这篇文章主要介绍了 20 个常用的 RPM 命令。
关于 RPM 的一些常识 RPM 是免费的，并且遵循 GPL 开源协议
RPM 将所有已安装软件包的信息保存在 /var/lib/rpm 数据库中。
RPM 是在 Linux 系统下安装软件包的唯一方法，如果您使用源代码安装了软件包，则 rpm 将无法对其进行管理。
RPM 处理 .rpm 文件，其中包含有关软件包的实际信息，例如：它是什么，它来自哪里，软件依赖信息，版本信息等。
RPM命令的五个基本模式 Install : 使用于安装任意的 RPM 包。 Remove ：用于擦除，删除或卸载任何 RPM 软件包。 Upgrade : 用于更新已经存在的 RPM 软件包。 Verify ：用来验证 RPM 软件包。 Query：用来查询 RPM 软件包。 查找和下载 RPM 包 以下是rpm网站的列表，您可以在其中找到和下载所有RPM软件包。</description></item><item><title>Linux Shell 输入/输出重定向</title><link>https://ahamoment.cn/posts/linux/linux-shell-input-output-redirect/</link><pubDate>Tue, 26 Nov 2019 19:54:15 +0800</pubDate><guid>https://ahamoment.cn/posts/linux/linux-shell-input-output-redirect/</guid><description>大多数 UNIX 系统命令从你的终端接受输入并将所产生的输出发送回到您的终端。一个命令通常从一个叫标准输入的地方读取输入，默认情况下，这恰好是你的终端。同样，一个命令通常将其输出写入到标准输出，默认情况下，这也是你的终端。
重定向命令列表如下：
命令 说明 command &amp;gt; file 将输出重定向到 file。 command &amp;lt; file 将输入重定向到 file。 command &amp;raquo; file 将输出以追加的方式重定向到 file。 n &amp;gt; file 将文件描述符为 n 的文件重定向到 file。 n &amp;raquo; file 将文件描述符为 n 的文件以追加的方式重定向到 file。 n &amp;gt;&amp;amp; m 将输出文件 m 和 n 合并。 n &amp;lt;&amp;amp; m 将输入文件 m 和 n 合并。 &amp;laquo; tag 将开始标记 tag 和结束标记 tag 之间的内容作为输入。 需要注意的是文件描述符 0 通常是标准输入（STDIN），1 是标准输出（STDOUT），2 是标准错误输出（STDERR）。</description></item></channel></rss>